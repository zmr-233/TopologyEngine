---
Language: Cpp                               # 语言设为 C++（指示 clang-format 进行 C++ 风格格式化）

# Indentation
IndentWidth: 4                              # 缩进宽度为 4 个空格
UseTab: Never                               # 不使用制表符，统一使用空格缩进

# Line length
ColumnLimit: 100                            # 每行最大列数限制为 100

# Line endings
DeriveLineEnding: false                     # 不从文件内容自动推断行结尾
LineEnding: LF                              # 行结尾使用 LF（Unix 风格）

# Spacing and padding
SpaceAfterCStyleCast: false                 # C 风格的强制类型转换后不加空格： (Type)var
SpaceAfterTemplateKeyword: true             # template 关键字后加空格： template <typename T>
SpaceAfterLogicalNot: false                 # 逻辑非 (!) 后不加空格
SpaceAfterControlStatementKeyword: true     # if/while/for 等关键字后加空格
SpaceBeforeParens: ControlStatements        # 在控制语句后（如 if/while/for）与括号之间加空格，函数调用不加
SpaceBeforeRangeBasedForLoopColon: false    # range-based for 中冒号前不加空格： for (auto x : container)
SpaceInEmptyParentheses: false              # 空括号内不加空格
SpacesInAngles: false                       # 模板尖括号内不加空格
SpacesInContainerLiterals: false            # 容器初始化列表中不加空格
SpacesInCStyleCastParentheses: false        # C 风格转型括号内不加空格：(int)val
SpacesInParentheses: false                  # 括号内不加空格
SpacesBeforeTrailingComments: 1             # 行尾注释前保留 1 个空格
SpaceBeforeCpp11BracedList: false           # C++11 初始化列表的花括号前不加空格
SpaceBeforeCtorInitializerColon: true       # 构造函数初始值列表冒号前加空格
SpaceBeforeInheritanceColon: true           # 类继承冒号前加空格
SpaceBeforeSquareBrackets: false            # 方括号前不加空格
SpacesInSquareBrackets: false               # 方括号内不加空格
SpaceBeforeCaseColon: false                 # switch 中 case 后冒号前不加空格
BreakBeforeBinaryOperators: None            # 不在二元运算符前断行
SpaceBeforeAssignmentOperators: true        # 赋值操作符前保留空格

# Brace placement
BraceWrapping:
  AfterClass: false                         # 类声明后的花括号不换行（直接接在类声明后）
  AfterControlStatement: false              # 控制语句后的花括号不另起一行
  AfterEnum: false                          # enum 后的花括号不另起一行
  AfterFunction: false                      # 函数声明后的花括号不另起一行
  AfterNamespace: false                     # namespace 后的花括号不另起一行
  AfterStruct: false                        # struct 后的花括号不另起一行
  AfterUnion: false                         # union 后的花括号不另起一行
  BeforeCatch: false                        # catch 前不另起一行
  BeforeElse: false                         # else 前不另起一行
  IndentBraces: false                       # 不对花括号本身进行缩进
  SplitEmptyFunction: false                 # 空函数不分行放花括号
  SplitEmptyRecord: false                   # 空 struct/class/union 不分行放花括号
  SplitEmptyNamespace: false                # 空 namespace 不分行放花括号

# Function definitions
# BreakAfterReturnType: AllDefinitions      # 已被弃用，使用 AlwaysBreakAfterDefinitionReturnType 替代
# AlwaysBreakAfterDefinitionReturnType: All   # 函数定义的返回类型独占一行

# Alignment
AlignConsecutiveAssignments: true           # 对齐连续的赋值语句
AlignConsecutiveDeclarations: true          # 对齐连续的声明语句
AlignEscapedNewlines: Left                  # 反斜线换行统一左对齐
AlignOperands: true                         # 对齐运算符操作数
AlignTrailingComments:                      # 对齐行尾注释
  Kind: Always                              #  总是对齐
  OverEmptyLines: 2                         # 可跨越最多 2 行空行进行对齐

# Miscellaneous
AllowShortFunctionsOnASingleLine: Inline    # 允许短函数定义写在单行（带花括号的内联形式）
AllowShortIfStatementsOnASingleLine: false  # 不允许 if 语句写在同一行
AllowShortLoopsOnASingleLine: false         # 不允许循环语句写在同一行
AllowAllParametersOfDeclarationOnNextLine: true # 声明中的所有参数可放在下一行
BreakBeforeBraces: Attach                   # 花括号与之前的内容在同一行（贴上去）
BreakBeforeTernaryOperators: true           # 三元运算符前进行换行
BreakConstructorInitializersBeforeComma: false # 构造函数初始值列表的逗号前不换行
BreakInheritanceList: BeforeColon           # 类继承列表冒号前换行
BreakStringLiterals: false                  # 不对字符串字面量自动换行
Cpp11BracedListStyle: false                 # 不使用 C++11 花括号初始化的特殊样式
IncludeBlocks: Regroup                      # 重新分组 include 块
IncludeIsMainRegex: "$"                     # 识别主文件的正则表达式为空（默认）
IncludeCategories:
  - Regex: '^"'                             # 1. 匹配双引号包含的文件
    Priority: 1
  - Regex: '^<(detail/|Types.h|JaggedTensor.h|GridBatch.h|SparseConvPackInfo.h|Config.h|FVDB.h|GaussianSplatting.h)'
    Priority: 1                             # 2. fvdb 相关文件
  - Regex: '^<nanovdb/'                     # 3. nanovdb 相关文件
    Priority: 2
  - Regex: '^<(torch|c10|THC|ATen)/'        # 4. pytorch/Torch 相关文件
    Priority: 3
  - Regex: '^<(cooperative_groups|cuco|cuda.h|cuda_|device_types|math_constants|nvtx3|cute)'
    Priority: 4                             # 5. CUDA 相关文件
  - Regex: '^<.*\..*'                       # 6. 其它含有 '.' 的系统头文件
    Priority: 5
  - Regex: '^<[^.]+'                        # 7. 不含 '.' 的 STL 头文件
    Priority: 6
IncludeIsMainSourceRegex: "$"               # 识别主源文件的正则表达式为空（默认）
IndentPPDirectives: None                    # 预处理指令不缩进
IndentWrappedFunctionNames: false           # 函数名换行时不进行额外缩进
KeepEmptyLinesAtTheStartOfBlocks: false     # 不保留块起始处的空行
MaxEmptyLinesToKeep: 1                      # 最多保留 1 行空行
NamespaceIndentation: None                  # namespace 内不额外缩进
PenaltyBreakAssignment: 2                   # 在赋值语句断行的惩罚系数
PenaltyBreakBeforeFirstCallParameter: 19    # 函数调用第一个参数前换行的惩罚
PenaltyBreakComment: 300                    # 注释断行的惩罚
PenaltyBreakFirstLessLess: 120              # 第一个 << 运算符断行的惩罚
PenaltyBreakString: 1000                    # 字符串断行的惩罚
PenaltyExcessCharacter: 1000000             # 超过列限制字符的惩罚
PenaltyReturnTypeOnItsOwnLine: 60           # 返回类型独占一行的惩罚
SortIncludes: true                          # 对 include 进行排序
SortUsingDeclarations: true                 # 对 using 声明进行排序
TabWidth: 4                                 # Tab 等效为 4 个空格宽度
Standard: c++20                             # 使用 C++20 标准
